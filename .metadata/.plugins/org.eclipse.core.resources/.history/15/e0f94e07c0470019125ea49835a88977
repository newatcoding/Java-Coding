package mar16;

public class NodeAndLL {
	private class Node{
		public int data;
		public Node next;
	}
	 Node head;
	 Node tail;
	 int size;
	
	public NodeAndLL() {  //this constructor not needed in java as these values are 
		head=tail=null;   //default values here but this step is needed in c++
		size=0;
	}
	public  void whenheadisequaltotail(int data){
		//allocation
		Node nn=new Node();
		nn.data=data;
		nn.next=null;
		
		//head value and next
		head=tail=nn;
		size++;
	}
	public void addend(int data ){
	
	if(head==tail){
		whenheadisequaltotail(data);
	}
	
	else{
		//allocation
				Node nn=new Node();
				nn.data=data;
				nn.next=null;
				
				//head value and next
				tail.next=nn;
				
				//connection
				tail=nn;
				
				//Summary
				size++;
	}
	}
	
	public void display(){
		Node temp=head;
		for(int i=0;i<size;i++){
			System.out.println(temp.data);
			temp=temp.next;
		}
		System.out.println();
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		NodeAndLL  l1=new NodeAndLL();
		l1.addend(10);
		l1.addend(20);
		l1.addend(30);
		l1.addend(40);
		l1.addend(50);
		
	}

}
